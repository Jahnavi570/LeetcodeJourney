2116. Check if a Parentheses String Can Be Valid
code:
#python
class Solution:
    def canBeValid(self, s: str, locked: str) -> bool:
        if len(s) % 2 != 0:
            return False

        open_possible = open_actual = 0
        for i in range(len(s)):
            if locked[i] == "0":
                open_possible += 1
            elif s[i] == "(":
                open_possible += 1
                open_actual += 1
            else:
                open_possible -= 1
                open_actual -= 1
            if open_possible < 0:
                return False

        close_possible = close_actual = 0
        for i in range(len(s) - 1, -1, -1):
            if locked[i] == "0":
                close_possible += 1
            elif s[i] == ")":
                close_possible += 1
                close_actual += 1
            else:
                close_possible -= 1
                close_actual -= 1
            if close_possible < 0:
                return False

        return True
Runtime:107ms
Beats:52.74%

